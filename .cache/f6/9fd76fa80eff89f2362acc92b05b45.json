{"id":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","dependencies":[{"name":"D:\\GITHUB\\Spring21_AAU_Project\\package.json","includedInParent":true,"mtime":1620046357371},{"name":"D:\\GITHUB\\Spring21_AAU_Project\\node_modules\\openrouteservice-js\\package.json","includedInParent":true,"mtime":1620130436406},{"name":"D:\\GITHUB\\Spring21_AAU_Project\\node_modules\\openrouteservice-js\\.babelrc","includedInParent":true,"mtime":499162500000},{"name":"superagent","loc":{"line":9,"column":26},"parent":"D:\\GITHUB\\Spring21_AAU_Project\\node_modules\\openrouteservice-js\\npm_distribution\\OrsGeocode.js","resolved":"D:\\GITHUB\\Spring21_AAU_Project\\node_modules\\superagent\\lib\\client.js"},{"name":"bluebird","loc":{"line":13,"column":24},"parent":"D:\\GITHUB\\Spring21_AAU_Project\\node_modules\\openrouteservice-js\\npm_distribution\\OrsGeocode.js","resolved":"D:\\GITHUB\\Spring21_AAU_Project\\node_modules\\bluebird\\js\\browser\\bluebird.js"},{"name":"./OrsUtil","loc":{"line":17,"column":23},"parent":"D:\\GITHUB\\Spring21_AAU_Project\\node_modules\\openrouteservice-js\\npm_distribution\\OrsGeocode.js","resolved":"D:\\GITHUB\\Spring21_AAU_Project\\node_modules\\openrouteservice-js\\npm_distribution\\OrsUtil.js"},{"name":"./constants","loc":{"line":21,"column":25},"parent":"D:\\GITHUB\\Spring21_AAU_Project\\node_modules\\openrouteservice-js\\npm_distribution\\OrsGeocode.js","resolved":"D:\\GITHUB\\Spring21_AAU_Project\\node_modules\\openrouteservice-js\\npm_distribution\\constants.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _superagent = require('superagent');\n\nvar _superagent2 = _interopRequireDefault(_superagent);\n\nvar _bluebird = require('bluebird');\n\nvar _bluebird2 = _interopRequireDefault(_bluebird);\n\nvar _OrsUtil = require('./OrsUtil');\n\nvar _OrsUtil2 = _interopRequireDefault(_OrsUtil);\n\nvar _constants = require('./constants');\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar orsUtil = new _OrsUtil2.default();\n\nvar OrsGeocode = function () {\n  function OrsGeocode(args) {\n    _classCallCheck(this, OrsGeocode);\n\n    this.args = {};\n    if (_constants2.default.apiKeyPropName in args) {\n      this.args.api_key = args.api_key;\n    } else {\n      // eslint-disable-next-line no-console\n      console.error(_constants2.default.missingAPIKeyMsg);\n    }\n    if (_constants2.default.propNames.host in args) {\n      this.args[_constants2.default.propNames.host] = args[_constants2.default.propNames.host];\n    }\n    if (_constants2.default.propNames.service in args) {\n      this.args[_constants2.default.propNames.service] = args[_constants2.default.propNames.service];\n    }\n\n    this.lookupParameter = {\n      api_key: function api_key(key, val) {\n        return key + '=' + val;\n      },\n      text: function text(key, val) {\n        return '&' + key + '=' + val;\n      },\n      focus_point: function focus_point(key, val) {\n        var urlParams = '';\n        urlParams += '&' + 'focus.point.lon' + '=' + val[1];\n        urlParams += '&' + 'focus.point.lat' + '=' + val[0];\n        return urlParams;\n      },\n      boundary_bbox: function boundary_bbox(key, val) {\n        var urlParams = '';\n        urlParams += '&' + 'boundary.rect.min_lon' + '=' + val[0][1];\n        urlParams += '&' + 'boundary.rect.min_lat' + '=' + val[0][0];\n        urlParams += '&' + 'boundary.rect.max_lon' + '=' + val[1][1];\n        urlParams += '&' + 'boundary.rect.max_lat' + '=' + val[1][0];\n\n        return urlParams;\n      },\n      point: function point(key, val) {\n        var urlParams = '';\n        urlParams += '&' + 'point.lon' + '=' + val.lat_lng[1];\n        urlParams += '&' + 'point.lat' + '=' + val.lat_lng[0];\n        urlParams += '&' + 'boundary.circle.radius' + '=' + val.radius;\n        return urlParams;\n      },\n      boundary_circle: function boundary_circle(key, val) {\n        var urlParams = '';\n        urlParams += '&' + 'boundary.circle.lon' + '=' + val.lat_lng[1];\n        urlParams += '&' + 'boundary.circle.lat' + '=' + val.lat_lng[0];\n        urlParams += '&' + 'boundary.circle.radius' + '=' + val.radius;\n\n        return urlParams;\n      },\n      sources: function sources(key, val) {\n        var urlParams = '&sources=';\n        for (var source in val) {\n          urlParams += source + ',';\n        }\n        return urlParams;\n      },\n      layers: function layers(key, val) {\n        var urlParams = '&layers=';\n        var counter = 0;\n        for (key in val) {\n          if (counter > 0) {\n            urlParams += ',';\n          }\n          urlParams += val[key];\n          counter++;\n        }\n        return urlParams;\n      },\n      boundary_country: function boundary_country(key, val) {\n        var urlParams = '&' + 'boundary.country' + '=' + val;\n        return urlParams;\n      },\n      size: function size(key, val) {\n        return '&' + key + '=' + val;\n      },\n      address: function address(key, val) {\n        return '&' + key + '=' + val;\n      },\n      neighbourhood: function neighbourhood(key, val) {\n        return '&' + key + '=' + val;\n      },\n      borough: function borough(key, val) {\n        return '&' + key + '=' + val;\n      },\n      locality: function locality(key, val) {\n        return '&' + key + '=' + val;\n      },\n      county: function county(key, val) {\n        return '&' + key + '=' + val;\n      },\n      region: function region(key, val) {\n        return '&' + key + '=' + val;\n      },\n      postalcode: function postalcode(key, val) {\n        return '&' + key + '=' + val;\n      },\n      country: function country(key, val) {\n        return '&' + key + '=' + val;\n      }\n    };\n  }\n\n  _createClass(OrsGeocode, [{\n    key: 'clear',\n    value: function clear() {\n      for (var variable in this.args) {\n        if (variable !== _constants2.default.apiKeyPropName) delete this.args[variable];\n      }\n    }\n  }, {\n    key: 'getParametersAsQueryString',\n    value: function getParametersAsQueryString(args) {\n      var queryString = '';\n      for (var key in args) {\n        var val = args[key];\n        if (_constants2.default.baseUrlConstituents.indexOf(key) > -1) {\n          continue;\n        } else queryString += this.lookupParameter[key](key, val);\n      }\n      return queryString;\n    }\n  }, {\n    key: 'geocodePromise',\n    value: function geocodePromise() {\n      var that = this;\n      return new _bluebird2.default(function (resolve, reject) {\n        var timeout = 5000;\n\n        // Use old API via GET\n        var url = orsUtil.prepareUrl(that.args);\n\n        // Add url query string from args\n        url += '?' + that.getParametersAsQueryString(that.args);\n\n        var orsRequest = _superagent2.default.get(url).timeout(timeout);\n\n        for (var key in that.customHeaders) {\n          orsRequest.set(key, that.customHeaders[key]);\n        }\n        orsRequest.end(function (err, res) {\n          if (err || !res.ok) {\n            // eslint-disable-next-line no-console\n            console.error(err);\n            reject(err);\n          } else if (res) {\n            resolve(res.body || res.text);\n          }\n        });\n      });\n    }\n  }, {\n    key: 'geocode',\n    value: function geocode(reqArgs) {\n      // Get custom header and remove from args\n      this.customHeaders = [];\n      if (reqArgs.customHeaders) {\n        this.customHeaders = reqArgs.customHeaders;\n        delete reqArgs.customHeaders;\n      }\n      orsUtil.setRequestDefaults(this.args, reqArgs);\n      // eslint-disable-next-line prettier/prettier\n      if (!this.args[_constants2.default.propNames.service] && !reqArgs[_constants2.default.propNames.service]) {\n        reqArgs.service = 'geocode/search';\n      }\n      orsUtil.copyProperties(reqArgs, this.args);\n      return this.geocodePromise();\n    }\n  }, {\n    key: 'reverseGeocode',\n    value: function reverseGeocode(reqArgs) {\n      // Get custom header and remove from args\n      this.customHeaders = [];\n      if (reqArgs.customHeaders) {\n        this.customHeaders = reqArgs.customHeaders;\n        delete reqArgs.customHeaders;\n      }\n      orsUtil.setRequestDefaults(this.args, reqArgs);\n      // eslint-disable-next-line prettier/prettier\n      if (!this.args[_constants2.default.propNames.service] && !reqArgs[_constants2.default.propNames.service]) {\n        reqArgs.service = 'geocode/reverse';\n      }\n      orsUtil.copyProperties(reqArgs, this.args);\n      return this.geocodePromise();\n    }\n  }, {\n    key: 'structuredGeocode',\n    value: function structuredGeocode(reqArgs) {\n      orsUtil.setRequestDefaults(this.args, reqArgs);\n      // eslint-disable-next-line prettier/prettier\n      if (!this.args[_constants2.default.propNames.service] && !reqArgs[_constants2.default.propNames.service]) {\n        reqArgs.service = 'geocode/search/structured';\n      }\n      orsUtil.copyProperties(reqArgs, this.args);\n      return this.geocodePromise();\n    }\n  }]);\n\n  return OrsGeocode;\n}();\n\nexports.default = OrsGeocode;"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}}],"sources":{"node_modules/openrouteservice-js/npm_distribution/OrsGeocode.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _superagent = require('superagent');\n\nvar _superagent2 = _interopRequireDefault(_superagent);\n\nvar _bluebird = require('bluebird');\n\nvar _bluebird2 = _interopRequireDefault(_bluebird);\n\nvar _OrsUtil = require('./OrsUtil');\n\nvar _OrsUtil2 = _interopRequireDefault(_OrsUtil);\n\nvar _constants = require('./constants');\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar orsUtil = new _OrsUtil2.default();\n\nvar OrsGeocode = function () {\n  function OrsGeocode(args) {\n    _classCallCheck(this, OrsGeocode);\n\n    this.args = {};\n    if (_constants2.default.apiKeyPropName in args) {\n      this.args.api_key = args.api_key;\n    } else {\n      // eslint-disable-next-line no-console\n      console.error(_constants2.default.missingAPIKeyMsg);\n    }\n    if (_constants2.default.propNames.host in args) {\n      this.args[_constants2.default.propNames.host] = args[_constants2.default.propNames.host];\n    }\n    if (_constants2.default.propNames.service in args) {\n      this.args[_constants2.default.propNames.service] = args[_constants2.default.propNames.service];\n    }\n\n    this.lookupParameter = {\n      api_key: function api_key(key, val) {\n        return key + '=' + val;\n      },\n      text: function text(key, val) {\n        return '&' + key + '=' + val;\n      },\n      focus_point: function focus_point(key, val) {\n        var urlParams = '';\n        urlParams += '&' + 'focus.point.lon' + '=' + val[1];\n        urlParams += '&' + 'focus.point.lat' + '=' + val[0];\n        return urlParams;\n      },\n      boundary_bbox: function boundary_bbox(key, val) {\n        var urlParams = '';\n        urlParams += '&' + 'boundary.rect.min_lon' + '=' + val[0][1];\n        urlParams += '&' + 'boundary.rect.min_lat' + '=' + val[0][0];\n        urlParams += '&' + 'boundary.rect.max_lon' + '=' + val[1][1];\n        urlParams += '&' + 'boundary.rect.max_lat' + '=' + val[1][0];\n\n        return urlParams;\n      },\n      point: function point(key, val) {\n        var urlParams = '';\n        urlParams += '&' + 'point.lon' + '=' + val.lat_lng[1];\n        urlParams += '&' + 'point.lat' + '=' + val.lat_lng[0];\n        urlParams += '&' + 'boundary.circle.radius' + '=' + val.radius;\n        return urlParams;\n      },\n      boundary_circle: function boundary_circle(key, val) {\n        var urlParams = '';\n        urlParams += '&' + 'boundary.circle.lon' + '=' + val.lat_lng[1];\n        urlParams += '&' + 'boundary.circle.lat' + '=' + val.lat_lng[0];\n        urlParams += '&' + 'boundary.circle.radius' + '=' + val.radius;\n\n        return urlParams;\n      },\n      sources: function sources(key, val) {\n        var urlParams = '&sources=';\n        for (var source in val) {\n          urlParams += source + ',';\n        }\n        return urlParams;\n      },\n      layers: function layers(key, val) {\n        var urlParams = '&layers=';\n        var counter = 0;\n        for (key in val) {\n          if (counter > 0) {\n            urlParams += ',';\n          }\n          urlParams += val[key];\n          counter++;\n        }\n        return urlParams;\n      },\n      boundary_country: function boundary_country(key, val) {\n        var urlParams = '&' + 'boundary.country' + '=' + val;\n        return urlParams;\n      },\n      size: function size(key, val) {\n        return '&' + key + '=' + val;\n      },\n      address: function address(key, val) {\n        return '&' + key + '=' + val;\n      },\n      neighbourhood: function neighbourhood(key, val) {\n        return '&' + key + '=' + val;\n      },\n      borough: function borough(key, val) {\n        return '&' + key + '=' + val;\n      },\n      locality: function locality(key, val) {\n        return '&' + key + '=' + val;\n      },\n      county: function county(key, val) {\n        return '&' + key + '=' + val;\n      },\n      region: function region(key, val) {\n        return '&' + key + '=' + val;\n      },\n      postalcode: function postalcode(key, val) {\n        return '&' + key + '=' + val;\n      },\n      country: function country(key, val) {\n        return '&' + key + '=' + val;\n      }\n    };\n  }\n\n  _createClass(OrsGeocode, [{\n    key: 'clear',\n    value: function clear() {\n      for (var variable in this.args) {\n        if (variable !== _constants2.default.apiKeyPropName) delete this.args[variable];\n      }\n    }\n  }, {\n    key: 'getParametersAsQueryString',\n    value: function getParametersAsQueryString(args) {\n      var queryString = '';\n      for (var key in args) {\n        var val = args[key];\n        if (_constants2.default.baseUrlConstituents.indexOf(key) > -1) {\n          continue;\n        } else queryString += this.lookupParameter[key](key, val);\n      }\n      return queryString;\n    }\n  }, {\n    key: 'geocodePromise',\n    value: function geocodePromise() {\n      var that = this;\n      return new _bluebird2.default(function (resolve, reject) {\n        var timeout = 5000;\n\n        // Use old API via GET\n        var url = orsUtil.prepareUrl(that.args);\n\n        // Add url query string from args\n        url += '?' + that.getParametersAsQueryString(that.args);\n\n        var orsRequest = _superagent2.default.get(url).timeout(timeout);\n\n        for (var key in that.customHeaders) {\n          orsRequest.set(key, that.customHeaders[key]);\n        }\n        orsRequest.end(function (err, res) {\n          if (err || !res.ok) {\n            // eslint-disable-next-line no-console\n            console.error(err);\n            reject(err);\n          } else if (res) {\n            resolve(res.body || res.text);\n          }\n        });\n      });\n    }\n  }, {\n    key: 'geocode',\n    value: function geocode(reqArgs) {\n      // Get custom header and remove from args\n      this.customHeaders = [];\n      if (reqArgs.customHeaders) {\n        this.customHeaders = reqArgs.customHeaders;\n        delete reqArgs.customHeaders;\n      }\n      orsUtil.setRequestDefaults(this.args, reqArgs);\n      // eslint-disable-next-line prettier/prettier\n      if (!this.args[_constants2.default.propNames.service] && !reqArgs[_constants2.default.propNames.service]) {\n        reqArgs.service = 'geocode/search';\n      }\n      orsUtil.copyProperties(reqArgs, this.args);\n      return this.geocodePromise();\n    }\n  }, {\n    key: 'reverseGeocode',\n    value: function reverseGeocode(reqArgs) {\n      // Get custom header and remove from args\n      this.customHeaders = [];\n      if (reqArgs.customHeaders) {\n        this.customHeaders = reqArgs.customHeaders;\n        delete reqArgs.customHeaders;\n      }\n      orsUtil.setRequestDefaults(this.args, reqArgs);\n      // eslint-disable-next-line prettier/prettier\n      if (!this.args[_constants2.default.propNames.service] && !reqArgs[_constants2.default.propNames.service]) {\n        reqArgs.service = 'geocode/reverse';\n      }\n      orsUtil.copyProperties(reqArgs, this.args);\n      return this.geocodePromise();\n    }\n  }, {\n    key: 'structuredGeocode',\n    value: function structuredGeocode(reqArgs) {\n      orsUtil.setRequestDefaults(this.args, reqArgs);\n      // eslint-disable-next-line prettier/prettier\n      if (!this.args[_constants2.default.propNames.service] && !reqArgs[_constants2.default.propNames.service]) {\n        reqArgs.service = 'geocode/search/structured';\n      }\n      orsUtil.copyProperties(reqArgs, this.args);\n      return this.geocodePromise();\n    }\n  }]);\n\n  return OrsGeocode;\n}();\n\nexports.default = OrsGeocode;"},"lineCount":237}},"error":null,"hash":"ad42797bfc74b560d6114c186ffc3bde","cacheData":{"env":{}}}